# Please edit the following:
GFLAGS_DIR=..\\gflags-1.4
ZLIB_DIR=..\\zlib-1.2.5
ZLIB_NAME=zlib.lib
SWIG_BINARY=..\\swigwin-2.0.0\\swig.exe
PROTOBUF_DIR=..\\protobuf-2.3.0

# This describes the python installation.
PYTHON_INC=/Ic:\\Python27\\include
PYTHON_LNK=c:\\Python27\\libs\\python27.lib

#  ----- No more editing below -----

DEBUG=/O2 -DNDEBUG /MD
CCC=cl /EHsc

GFLAGS_INC = /I$(GFLAGS_DIR)\\src\\windows /I$(GFLAGS_DIR)\\src
ZLIB_INC = /I$(ZLIB_DIR)
PROTOBUF_INC = /I$(PROTOBUF_DIR)\\include
CFLAGS= -nologo $(SYSCFLAGS) $(DEBUG) /I.  $(GFLAGS_INC) $(ZLIB_INC)\
	 $(PROTOBUF_INC)

LD = cl /EHsc
GFLAGS_LNK =
ZLIB_LNK = $(ZLIB_DIR)/$(ZLIB_NAME)
PROTOBUF_LNK = $(PROTOBUF_DIR)\\lib\\libprotobuf.lib
LDFLAGS=$(GFLAGS_LNK) $(ZLIB_LNK) $(PROTOBUF_LNK) psapi.lib ws2_32.lib
GFLAGS_CFLAGS=/I$(GFLAGS_DIR)\\src\\windows /I$(GFLAGS_DIR)\\src /D_USRDLL /D_WINDLL

# Real targets

all:
	@echo Please define target: cplibs, cpexe, pycp, clean

CPLIBS = \
	routing.lib \
	constraint_solver.lib \
	util.lib \
	base.lib \
	gflags.lib \
	algorithms.lib \
	graph.lib \
	shortestpaths.lib

cplibs: $(CPLIBS)

BINARIES=nqueens.exe golomb.exe magic_square.exe cryptarithm.exe tsp.exe cvrptw.exe

cpexe: $(BINARIES)

clean:
	del *.lib
	del objs\\*.obj
	del  $(BINARIES)
	del *.dll
	del *.exp
	del constraint_solver\constraint_solver_wrap.cc
	del constraint_solver\_pywrapcp.pyd
	del constraint_solver\pywrapcp.py
	del constraint_solver\assignment.pb.*

# Constraint Solver Lib.

CONSTRAINT_SOLVER_LIB_OBJS = \
	objs/alldiff_cst.obj\
	objs/assignment.obj\
	objs/assignment.pb.obj\
	objs/constraint_solver.obj\
	objs/constraints.obj\
	objs/count_cst.obj\
	objs/default_search.obj\
	objs/element.obj\
	objs/expr_array.obj\
	objs/expr_cst.obj\
	objs/expressions.obj\
	objs/interval.obj\
	objs/local_search.obj\
	objs/pack.obj\
	objs/range_cst.obj\
	objs/resource.obj\
	objs/sched_search.obj\
	objs/search.obj\
	objs/table.obj\
	objs/timetabling.obj\
	objs/utilities.obj

objs/alldiff_cst.obj:constraint_solver/alldiff_cst.cc
	$(CCC) $(CFLAGS) -c constraint_solver/alldiff_cst.cc /Foobjs/alldiff_cst.obj

objs/assignment.obj:constraint_solver/assignment.cc constraint_solver/assignment.pb.cc
	$(CCC) $(CFLAGS) -c constraint_solver/assignment.cc /Foobjs/assignment.obj

constraint_solver/assignment.pb.cc:constraint_solver/assignment.proto
	$(PROTOBUF_DIR)\\bin\\protoc --proto_path=constraint_solver --cpp_out=constraint_solver constraint_solver\\assignment.proto

objs/assignment.pb.obj:constraint_solver/assignment.pb.cc
	$(CCC) $(CFLAGS) -c constraint_solver/assignment.pb.cc /Foobjs/assignment.pb.obj

objs/constraint_solver.obj:constraint_solver/constraint_solver.cc
	$(CCC) $(CFLAGS) -c constraint_solver/constraint_solver.cc /Foobjs/constraint_solver.obj

objs/constraints.obj:constraint_solver/constraints.cc
	$(CCC) $(CFLAGS) -c constraint_solver/constraints.cc /Foobjs/constraints.obj

objs/count_cst.obj:constraint_solver/count_cst.cc
	$(CCC) $(CFLAGS) -c constraint_solver/count_cst.cc /Foobjs/count_cst.obj

objs/default_search.obj:constraint_solver/default_search.cc
	$(CCC) $(CFLAGS) -c constraint_solver/default_search.cc /Foobjs/default_search.obj

objs/element.obj:constraint_solver/element.cc
	$(CCC) $(CFLAGS) -c constraint_solver/element.cc /Foobjs/element.obj

objs/expr_array.obj:constraint_solver/expr_array.cc
	$(CCC) $(CFLAGS) -c constraint_solver/expr_array.cc /Foobjs/expr_array.obj

objs/expr_cst.obj:constraint_solver/expr_cst.cc
	$(CCC) $(CFLAGS) -c constraint_solver/expr_cst.cc /Foobjs/expr_cst.obj

objs/expressions.obj:constraint_solver/expressions.cc
	$(CCC) $(CFLAGS) -c constraint_solver/expressions.cc /Foobjs/expressions.obj

objs/interval.obj:constraint_solver/interval.cc
	$(CCC) $(CFLAGS) -c constraint_solver/interval.cc /Foobjs/interval.obj

objs/local_search.obj:constraint_solver/local_search.cc
	$(CCC) $(CFLAGS) -c constraint_solver/local_search.cc /Foobjs/local_search.obj

objs/pack.obj:constraint_solver/pack.cc
	$(CCC) $(CFLAGS) -c constraint_solver/pack.cc /Foobjs/pack.obj

objs/range_cst.obj:constraint_solver/range_cst.cc
	$(CCC) $(CFLAGS) -c constraint_solver/range_cst.cc /Foobjs/range_cst.obj

objs/resource.obj:constraint_solver/resource.cc
	$(CCC) $(CFLAGS) -c constraint_solver/resource.cc /Foobjs/resource.obj

objs/sched_search.obj:constraint_solver/sched_search.cc
	$(CCC) $(CFLAGS) -c constraint_solver/sched_search.cc /Foobjs/sched_search.obj

objs/search.obj:constraint_solver/search.cc
	$(CCC) $(CFLAGS) -c constraint_solver/search.cc /Foobjs/search.obj

objs/table.obj:constraint_solver/table.cc
	$(CCC) $(CFLAGS) -c constraint_solver/table.cc /Foobjs/table.obj

objs/timetabling.obj:constraint_solver/timetabling.cc
	$(CCC) $(CFLAGS) -c constraint_solver/timetabling.cc /Foobjs/timetabling.obj

objs/utilities.obj:constraint_solver/utilities.cc
	$(CCC) $(CFLAGS) -c constraint_solver/utilities.cc /Foobjs/utilities.obj

constraint_solver.lib: $(CONSTRAINT_SOLVER_LIB_OBJS)
	lib /OUT:constraint_solver.lib $(CONSTRAINT_SOLVER_LIB_OBJS)

# Util library.

UTIL_LIB_OBJS=\
	objs/bitset.obj \
	objs/cached_log.obj

objs/bitset.obj:util/bitset.cc
	$(CCC) $(CFLAGS) -c util/bitset.cc /Foobjs/bitset.obj
objs/cached_log.obj:util/cached_log.cc
	$(CCC) $(CFLAGS) -c util/cached_log.cc /Foobjs/cached_log.obj

util.lib: $(UTIL_LIB_OBJS)
	lib /OUT:util.lib $(UTIL_LIB_OBJS)

# Graph library.

GRAPH_LIB_OBJS=\
	objs/bron_kerbosch.obj

objs/bron_kerbosch.obj:graph/bron_kerbosch.cc
	$(CCC) $(CFLAGS) -c graph/bron_kerbosch.cc /Foobjs/bron_kerbosch.obj

graph.lib: $(GRAPH_LIB_OBJS)
	lib /OUT:graph.lib $(GRAPH_LIB_OBJS)

# Shortestpaths library.

SHORTESTPATHS_LIB_OBJS=\
	objs/bellman_ford.obj \
	objs/dijkstra.obj

objs/bellman_ford.obj:graph/bellman_ford.cc
	$(CCC) $(CFLAGS) -c graph/bellman_ford.cc /Foobjs/bellman_ford.obj

objs/dijkstra.obj:graph/dijkstra.cc
	$(CCC) $(CFLAGS) -c graph/dijkstra.cc /Foobjs/dijkstra.obj

shortestpaths.lib: $(SHORTESTPATHS_LIB_OBJS)
	lib /OUT:shortestpaths.lib $(SHORTESTPATHS_LIB_OBJS)

# Routing library.

ROUTING_LIB_OBJS=\
	objs/routing.obj

objs/routing.obj:constraint_solver/routing.cc
	$(CCC) $(CFLAGS) -c constraint_solver/routing.cc /Foobjs/routing.obj

routing.lib: $(ROUTING_LIB_OBJS)
	lib /OUT:routing.lib $(ROUTING_LIB_OBJS)

# Algorithms library.

ALGORITHMS_LIB_OBJS=\
	objs/hungarian.obj

objs/hungarian.obj:algorithms/hungarian.cc
	$(CCC) $(CFLAGS) -c algorithms/hungarian.cc /Foobjs/hungarian.obj

algorithms.lib: $(ALGORITHMS_LIB_OBJS)
	lib /OUT:algorithms.lib $(ALGORITHMS_LIB_OBJS)

# Base library.

BASE_LIB_OBJS=\
	objs/bitmap.obj\
	objs/callback.obj\
	objs/logging.obj\
	objs/random.obj\
	objs/stringpiece.obj\
	objs/stringprintf.obj\
	objs/timer.obj\
	objs/util.obj

objs/bitmap.obj:base/bitmap.cc
	$(CCC) $(CFLAGS) -c base/bitmap.cc /Foobjs/bitmap.obj
objs/callback.obj:base/callback.cc
	$(CCC) $(CFLAGS) -c base/callback.cc /Foobjs/callback.obj
objs/logging.obj:base/logging.cc
	$(CCC) $(CFLAGS) -c base/logging.cc /Foobjs/logging.obj
objs/random.obj:base/random.cc
	$(CCC) $(CFLAGS) -c base/random.cc /Foobjs/random.obj
objs/stringpiece.obj:base/stringpiece.cc
	$(CCC) $(CFLAGS) -c base/stringpiece.cc /Foobjs/stringpiece.obj
objs/stringprintf.obj:base/stringprintf.cc
	$(CCC) $(CFLAGS) -c base/stringprintf.cc /Foobjs/stringprintf.obj
objs/timer.obj:base/timer.cc
	$(CCC) $(CFLAGS) -c base/timer.cc /Foobjs/timer.obj
objs/util.obj:base/util.cc
	$(CCC) $(CFLAGS) -c base/util.cc /Foobjs/util.obj

base.lib: $(BASE_LIB_OBJS)
	lib /OUT:base.lib $(BASE_LIB_OBJS)

GFLAGS_LIB_OBJS =\
	objs/gflags.obj\
	objs/gflags_completions.obj\
	objs/gflags_reporting.obj\
	objs/port.obj

objs/gflags.obj:$(GFLAGS_DIR)/src/gflags.cc
	$(CCC) $(GFLAGS_CFLAGS) -c $(GFLAGS_DIR)/src/gflags.cc /Foobjs/gflags.obj

objs/gflags_completions.obj:$(GFLAGS_DIR)/src/gflags_completions.cc
	$(CCC) $(GFLAGS_CFLAGS) -c $(GFLAGS_DIR)/src/gflags_completions.cc /Foobjs/gflags_completions.obj

objs/gflags_reporting.obj:$(GFLAGS_DIR)/src/gflags_reporting.cc
	$(CCC) $(GFLAGS_CFLAGS) -c $(GFLAGS_DIR)/src/gflags_reporting.cc /Foobjs/gflags_reporting.obj

objs/port.obj:$(GFLAGS_DIR)/src/windows/port.cc
	$(CCC) $(GFLAGS_CFLAGS) -c $(GFLAGS_DIR)/src/windows/port.cc /Foobjs/port.obj

gflags.lib: $(GFLAGS_LIB_OBJS)
	link /DLL /OUT:gflags.dll $(GFLAGS_LIB_OBJS)

# Examples

objs/cryptarithm.obj:examples/cryptarithm.cc
	$(CCC) $(CFLAGS) -c examples/cryptarithm.cc /Foobjs/cryptarithm.obj

cryptarithm.exe: $(CPLIBS) objs/cryptarithm.obj
	$(CCC) $(CFLAGS) $(LDFLAGS) objs/cryptarithm.obj $(CPLIBS) /Fecryptarithm.exe

objs/cvrptw.obj: examples/cvrptw.cc
	$(CCC) $(CFLAGS) -c examples/cvrptw.cc /Foobjs/cvrptw.obj

cvrptw.exe: $(CPLIBS) $(BASE_LIBS) objs/cvrptw.obj
	$(CCC) $(CFLAGS) $(LDFLAGS) objs/cvrptw.obj $(CPLIBS) $(BASE_LIBS) /Fecvrptw.exe

objs/golomb.obj:examples/golomb.cc
	$(CCC) $(CFLAGS) -c examples/golomb.cc /Foobjs/golomb.obj

golomb.exe: $(CPLIBS) objs/golomb.obj
	$(CCC) $(CFLAGS) $(LDFLAGS) objs/golomb.obj $(CPLIBS) /Fegolomb.exe

objs/magic_square.obj:examples/magic_square.cc
	$(CCC) $(CFLAGS) -c examples/magic_square.cc /Foobjs/magic_square.obj

magic_square.exe: $(CPLIBS) objs/magic_square.obj
	$(CCC) $(CFLAGS) $(LDFLAGS) objs/magic_square.obj $(CPLIBS) /Femagic_square.exe

objs/nqueens.obj: examples/nqueens.cc
	$(CCC) $(CFLAGS) -c examples/nqueens.cc /Foobjs/nqueens.obj

nqueens.exe: $(CPLIBS) objs/nqueens.obj
	$(CCC) $(CFLAGS) $(LDFLAGS) objs/nqueens.obj $(CPLIBS) /Fenqueens.exe

objs/tsp.obj: examples/tsp.cc
	$(CCC) $(CFLAGS) -c examples/tsp.cc /Foobjs/tsp.obj

tsp.exe: $(CPLIBS) objs/tsp.obj
	$(CCC) $(CFLAGS) $(LDFLAGS) objs/tsp.obj $(CPLIBS) /Fetsp.exe


# SWIG

# pywrapcp

pycp: constraint_solver/_pywrapcp.pyd constraint_solver/pywrapcp.py constraint_solver/_pywraprouting.pyd constraint_solver/pywraprouting.py $(CPLIBS)

constraint_solver/pywrapcp.py: constraint_solver/constraint_solver.swig constraint_solver/constraint_solver.h constraint_solver/constraint_solveri.h base/base.swig
	$(SWIG_BINARY) -c++ -python -o constraint_solver/constraint_solver_wrap.cc -module pywrapcp constraint_solver/constraint_solver.swig

constraint_solver/constraint_solver_wrap.cc: constraint_solver/pywrapcp.py

objs/constraint_solver_wrap.obj: constraint_solver/constraint_solver_wrap.cc
	$(CCC) $(CFLAGS) $(PYTHON_INC) /I__WIN32__ -c constraint_solver/constraint_solver_wrap.cc /Foobjs/constraint_solver_wrap.obj

_pywrapcp.dll: objs/constraint_solver_wrap.obj $(CPLIBS)
	link /DLL /OUT:_pywrapcp.dll objs/constraint_solver_wrap.obj $(CPLIBS) $(LDFLAGS) $(PYTHON_LNK)

constraint_solver/_pywrapcp.pyd: _pywrapcp.dll
	copy _pywrapcp.dll constraint_solver\\_pywrapcp.pyd

# pywraprouting

constraint_solver/pywraprouting.py: constraint_solver/routing.swig constraint_solver/constraint_solver.h constraint_solver/constraint_solveri.h constraint_solver/routing.h base/base.swig
	$(SWIG_BINARY) -c++ -python -o constraint_solver/routing_wrap.cc -module pywraprouting constraint_solver/routing.swig

constraint_solver/routing_wrap.cc: constraint_solver/pywraprouting.py

objs/routing_wrap.obj: constraint_solver/routing_wrap.cc
	$(CCC) $(CFLAGS) $(PYTHON_INC) /I__WIN32__ -c constraint_solver/routing_wrap.cc /Foobjs/routing_wrap.obj

_pywraprouting.dll: objs/routing_wrap.obj $(CPLIBS)
	link /DLL /OUT:_pywraprouting.dll objs/routing_wrap.obj $(CPLIBS) $(LDFLAGS) $(PYTHON_LNK)

constraint_solver/_pywraprouting.pyd: _pywraprouting.dll
	copy _pywraprouting.dll constraint_solver\\_pywraprouting.pyd

